@page "/"
@using Frontend.Models
@using Frontend.Token_Utility
@using Microsoft.AspNetCore.Components.Forms
@using RedBoxAuthentication
@using Frontend.Client_Utility
@using System.Text.RegularExpressions
@inject AuthenticationGrpcService.AuthenticationGrpcServiceClient AuthApi
@inject ClientUtility ClientUtility
@inject TokenRefresh TokenRefresh

<head>
    <title>
        Login
    </title>
    <style type="text/css">
        body {
          background-color: #F8F7F6;
        }
      </style>
</head>

<div class="ui two column grid center aligned middle aligned" style="height: 100vh">
    <div class="column">
        <div class="ui container" style="max-width: 450px">
            <div class="ui header">
                Effettua l'accesso
            </div>
            <EditForm Model="@_userLoginModel" OnValidSubmit="@Login" class="ui large form">
                <DataAnnotationsValidator/>
                <div class="ui stacked segment">
                    <div class="field">
                        <div class="ui input left icon">
                            <InputText id="username" @bind-Value="_userLoginModel.UsernameEmail" placeholder="Username"/>
                            <i class="user icon"></i>
                        </div>
                        <ValidationMessage For="() => _userLoginModel.UsernameEmail" class="ui red text error"/>
                    </div>
                    <div class="field">
                        <div class="ui input left icon">
                            <InputText type="password" id="password" @bind-Value="_userLoginModel.Password" placeholder="Password"/>
                            <i class="key icon"></i>
                        </div>
                        <ValidationMessage For="() => _userLoginModel.Password" class="ui red text error"/>
                    </div>
                    <button type="submit" class="ui fluid large red submit button">Login</button>
                </div>
            </EditForm>
        </div>
    </div>
    <div class="column">
        <div class="ui center aligned image">
            <h1 class="ui header">
                <div class="content">
                    Benvenuto in <br/>
                    <span class="ui red text">RedBox</span>
                </div>
            </h1>
            <img src="Assets/logo.jpg" class="ui image" alt="error">
        </div>
    </div>
</div>

@inject NavigationManager NavigationManager

@code {

    string? _token;
    string? _status;
    long _expiresAt;

    readonly UserLogin _userLoginModel = new()
    {
        UsernameEmail = null,
        Password = null
    };

    private async Task Login()
    {
        LoginRequest request;
        if (new Regex(@"^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$").IsMatch(_userLoginModel.UsernameEmail))
        {
            request = new LoginRequest
            {
                Email = _userLoginModel.UsernameEmail,
                Password = _userLoginModel.Password
            };
        }
        else
        {
            request = new LoginRequest
            {
                Username = _userLoginModel.UsernameEmail,
                Password = _userLoginModel.Password
            };
        }

        var res = await AuthApi.LoginAsync(request);
        _token = res.Token;
        _status = res.Status.ToString();
        _expiresAt = res.ExpiresAt;
        if (res.Status == LoginStatus.LoginSuccess)
        {
            ClientUtility.SetAuthToken(_token);
            await TokenRefresh.RefreshToken(new TokenRefreshResponse
            {
                Token = _token,
                ExpiresAt = _expiresAt
            });
            NavigationManager.NavigateTo("/Messages");
        }
    }

}